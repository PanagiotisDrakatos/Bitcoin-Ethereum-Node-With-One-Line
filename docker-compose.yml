services:
  bitcoin_service:
    build:
      context: .
      dockerfile: Bitcoin.Dockerfile
      args:
        BITCOIN_VERSION: ${BTC_VERSION}
    image: bitcoin_full_node
    ports:
      - 8333:8333
      - 8332:8332
    volumes:
      - bitcoin_volume:/home/btc-user/.bitcoin
    networks:
      network:
        ipv4_address: 192.168.1.219
    healthcheck:
      test: [
        "CMD",
        "bitcoin-cli",
        "-rpccookiefile=/home/btc-user/.bitcoin/btc.cookie",
        "-rpcport=8332",
        "-rpcconnect=192.168.1.219",
        "getblockchaininfo"
      ]
      interval: 40s
      timeout: 60s
      retries: 45

  electrs:
    image: electrs:latest
    build:
      context: ./electrs/.
    container_name: electrs
    restart: always
    ports:
      - "50001:50001"    # Electrum TCP port exposed on host and container
    environment:
      - ELECTRS_NETWORK=bitcoin
      - ELECTRS_DAEMON_RPC_ADDR=192.168.1.219:8332
      - ELECTRS_DAEMON_P2P_ADDR=192.168.1.219:8333
      - ELECTRS_ELECTRUM_RPC_ADDR=192.168.1.223:50001
      - ELECTRS_LOG_FILTERS=INFO
      - ELECTRS_DB_DIR=/home/electrs/db
      - ELECTRS_VERBOSE_RPC_LOGS=false # Disable verbose logs to reduce overhead
      - ELECTRS_IGNORE_MEMPOOL=true # Skip mempool to boost sync speed
      - ELECTRS_TIMESTAMP_CACHE_CAPACITY=2000000 # Increased cache for better lookup performance
      - ELECTRS_INDEX_LOOKUP_LIMIT=20000 # Raised lookup limit for addresses with many transactions
      - ELECTRS_COOKIE_FILE=/home/btc-user/.bitcoin/btc.cookie
      - ELECTRS_THREADS=8 # Set an optimal thread count based on typical CPU usage
      - ELECTRS_DB_CACHE_SIZE=2048 # Adjusted DB cache size for efficient storage handling
      - ELECTRS_JSONRPC_CONCURRENCY=16 # Allow more concurrent requests for faster API calls
    volumes:
      - electrs_db:/home/electrs/db
      - bitcoin_volume:/home/btc-user/.bitcoin:ro    # Mount same bitcoin data volume (read-only)
    networks:
      network:
        ipv4_address: 192.168.1.223 # new IP in the same subnet
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c 'echo > /dev/tcp/192.168.1.223/50001'"]
      interval: 40s
      timeout: 60s
      retries: 45
    depends_on:
      bitcoin_service:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      network:
        ipv4_address: 192.168.1.224
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 40s
      timeout: 60s
      retries: 45

  explorer:
    container_name: btc-rpc-explorer
    environment:
      BTCEXP_HOST: $BTCEXP_HOST
      BTCEXP_PORT: $BTCEXP_PORT
      BTCEXP_ADDRESS_API: $BTCEXP_ADDRESS_API
      BTCEXP_ELECTRUM_SERVERS: $BTCEXP_ELECTRUM_SERVERS
      BTCEXP_ELECTRUM_TXINDEX: $BTCEXP_ELECTRUM_TXINDEX
      BTCEXP_BITCOIND_URI: $BTCEXP_BITCOIND_URI
      BTCEXP_BITCOIND_USER: $BTCEXP_BITCOIND_USER
      BTCEXP_BITCOIND_PASS: $BTCEXP_BITCOIND_PASS
      BTCEXP_BITCOIND_RPC_TIMEOUT: $BTCEXP_BITCOIND_RPC_TIMEOUT
      BTCEXP_SECURE_SITE: $BTCEXP_SECURE_SITE
      BTCEXP_COIN: $BTCEXP_COIN
      BTCEXP_RPC_CONCURRENCY: $BTCEXP_RPC_CONCURRENCY
      BTCEXP_SLOW_DEVICE_MODE: $BTCEXP_SLOW_DEVICE_MODE
      BTCEXP_NO_RATES: $BTCEXP_NO_RATES
      BTCEXP_RPC_ALLOWALL: $BTCEXP_RPC_ALLOWALL
      BTCEXP_UI_TIMEZONE: $BTCEXP_UI_TIMEZONE
      BTCEXP_UI_THEME: $BTCEXP_UI_THEME
      BTCEXP_NO_INMEMORY_RPC_CACHE: true
      BTCEXP_REDIS_URL: redis://192.168.1.224:6379
    build:
      context: ./btc-rpc-explorer/.
    image: btc-rpc-explorer:latest
    volumes:
      - bitcoin_volume:/home/btc-user/.bitcoin:ro    # Mount same bitcoin data volume (read-only)
    networks:
      network:
        ipv4_address: 192.168.1.222
    ports:
      - "3002:3002"
    depends_on:
      redis:
        condition: service_healthy
      electrs:
        condition: service_healthy

  ethereum_geth:
    build:
      context: .
      dockerfile: Ethereum.Dockerfile
    image: ethereum_geth
    command: /usr/local/bin/start-geth.sh
    ports:
      - 8551:8551
      - 8554:8554
    volumes:
      - ethereum_volume:/home/geth/geth
    networks:
      network:
        ipv4_address: 192.168.1.220


  ethereum_blsync:
    image: ethereum_snap_node
    depends_on:
      - ethereum_geth
    command: /usr/local/bin/start-blsync.sh
    volumes:
      - ethereum_volume:/home/geth/geth
    networks:
      network:
        ipv4_address: 192.168.1.221

volumes:
  redis-data:
    driver: local
  bitcoin_volume:
    driver: local
  ethereum_volume:
    driver: local
  electrs_db: # âœ… Add this to define the missing volume
    driver: local



networks:
  network:
    driver: macvlan
    driver_opts:
      macvlan_mode: bridge
      parent: ${INTERFACE}
    ipam:
      config:
        - subnet: "192.168.1.0/24"
          ip_range: "192.168.1.71/32"
          gateway: "192.168.1.1"
